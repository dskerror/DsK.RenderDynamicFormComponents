<div class="container border">
    <h3>Users</h3>
    <hr />

    <label for="InputType">Input Type</label>
    <select name="InputType" id="InputType" @onchange="SelecteHTMLInputType">
        <option value="@HTMLInputType.Textbox">Add Textbox</option>
        <option value="@HTMLInputType.Textarea">Add Textarea</option>
        <option value="@HTMLInputType.Checkbox">Add Checkbox</option>
    </select>

    <button @onclick="CreateHTMLInput" class="btn btn-primary">Create Input</button>

    @for (int i = 0; i < _values.Count; i++)
    {
        var index = i;
        if (_values[i].Type == HTMLInputType.Textbox)
        {
            <div>
                <input type="text" @onchange="(e) => UpdateValue(index, e.Value.ToString())" value="@_values[i].Value" />
                <button @onclick="() => RemoveValue(index)" class="btn btn-outline-danger">Remove</button>
            </div>
        }
        else if (_values[i].Type == HTMLInputType.Textarea)
        {
            <div>
                <textarea rows="4" cols="50" @onchange="(e) => UpdateValue(index, e.Value.ToString())" value="@_values[i].Value">
                        </textarea>
                <button @onclick="() => RemoveValue(index)" class="btn btn-outline-danger">Remove</button>
            </div>
        }

        else if (_values[i].Type == HTMLInputType.Checkbox)
        {
            <div>
                <input type="checkbox" @onchange="(e) => UpdateValue(index, e.Value.ToString())" value="@_values[i].Value">
                <label> Label</label>
                <button @onclick="() => RemoveValue(index)" class="btn btn-outline-danger">Remove</button>
            </div>
        }

     
    }
    <hr />
    <div>
        <button @onclick="HandleSubmit" class="btn btn-success">Submit</button>
    </div>
    <hr />
    @for (int j = 0; j < _values.Count; j++)
    {
        <p>@_values[j].Value</p>
    }
</div>
